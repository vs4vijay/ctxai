name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          #   - "3.10"
          #   - "3.11"
          #   - "3.12"
          - "3.13"

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run linters
        run: |
          uv run ruff check .
          # uv run ruff format --check .

      - name: Run tests with coverage
        run: uv run pytest --cov=ctxai --cov-report=xml --cov-report=term-missing

      # - name: Upload coverage to Codecov
      #   if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.13'
      #   uses: codecov/codecov-action@v4
      #   with:
      #     file: ./coverage.xml
      #     fail_ci_if_error: true
      #     token: ${{ secrets.CODECOV_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.13

      - name: Build package
        run: uv build

      - name: Check package
        run: |
          uv run twine check dist/*

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  security:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.13

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run security checks
        run: |
          uv run bandit -r src/
